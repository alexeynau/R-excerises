2+6
2+6, 3+6
g <- c(1, 0, 2, 3, 6, 8, 12, 15, 0, NA, NA, 9, 4, 16, 2, 0)
g
g[1]
# последний элемент вектора
g[length(g)]
# последний элемент вектора
g[length(g)]
# первый элемент вектора
g[1]
# последний элемент вектора
g[length(g)]
# последний элемент вектора
g[length(g)-1]
# элементы вектора с третьего по пятый включительно
g[3:5]
# элементы вектора, которые равны 2
g[==2]
# элементы вектора, которые равны 2
g[el > 2]
# элементы вектора, которые равны 2
g == 2
# элементы вектора, которые равны 2
g[g == 2]
# элементы вектора, которые равны 2
g[g > 2]
# элементы вектора, которые равны 2
g[g == 2]
# элементы вектора, которые равны 2
g[g == 2, g!= NA]
# элементы вектора, которые равны 2
g[g == 2 && g!= NA]
# элементы вектора, которые равны 2
g[g == 2 && !is.na(g)]
# элементы вектора, которые равны 2
g[g == 2]
# элементы вектора, которые больше 4
g[g > 4]
# элементы вектора, которые кратны 3
g[g % 3 == 0]
# элементы вектора, которые кратны 3
g[mod(g, 3) == 0]
# элементы вектора, которые кратны 3
g[g %% 3 == 0]
# элементы вектора, которые больше 4 и кратны 3
g[g > 4 && g %% 3 == 0]
# элементы вектора, которые больше 4 и кратны 3
g[g > 4 & g %% 3 == 0]
# элементы вектора, которые равны 2
g[g == 2 & !is.na(g)]
# элементы вектора, которые больше 4 и кратны 3
g[g > 4 & g %% 3 == 0 & !is.na(g)]
source("~/RStudio/MireaPractice/Pr1.R", echo=TRUE)
# элементы вектора, которые или меньше 1, или больше 5
g[(g < 1 | g > 5) & !is.na(g)]
# индексы элементов, которые равны 0
g == 0
# индексы элементов, которые равны 0
g[g == 0]
# индексы элементов, которые равны 0
g[g == 0] == 0
# индексы элементов, которые равны 0
g[g == 0 !is.na(g)] == 0
# индексы элементов, которые равны 0
g[g == 0 & !is.na(g)] == 0
# индексы элементов, которые равны 0
which(g == 0 & !is.na(g))
# индексы элементов, которые не меньше 2 и не больше 8
which(g >= 2 & g <= 8 & !is.na(g))
элементы вектора по возрастанию, с пропущенными
# элементы вектора по возрастанию, с пропущенными
# значениями в конце без цифр «2»
sort(g[g %/% 10 != 2])
# элементы вектора по возрастанию, с пропущенными
# значениями в конце без цифр «2»
sort(g[g %/% 10 == 2])
# элементы вектора по возрастанию, с пропущенными
# значениями в конце без цифр «2»
sort(g[g / 10 != 2])
# элементы вектора по возрастанию, с пропущенными
# значениями в конце без цифр «2»
sort(g[g == 2])
# элементы вектора по возрастанию, с пропущенными
# значениями в конце без цифр «2»
sort(g[g %% 10 != 2])
# Задание 2 (№8) ---------------------------------------------------------------
getwd()
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "Ex8/coords.txt")
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "/Ex8/coords.txt")
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "./Ex8/coords.txt")
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "./Ex8/coords")
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "Ex8/coords")
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "Ex8/coords.txt")
setwd("~/RStudio/MireaPractice")
setwd("~/RStudio/MireaPractice/Pr1")
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "Ex8/coords.txt")
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "Ex8/coords.txt")
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "Ex8/coords.txt")
x <- abs(x)
x
x <- x**p
x <- x^p
p <- 5.75
x <- abs(x)
x <- x^p
x
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "Ex8/coords.txt")
p <- 5.75
x <- abs(x)
x <- x^p
sum(x)
sum(x) ^ (1/p)
# Задание 2 (№8) ---------------------------------------------------------------
x <- read.table(file = "Ex8/coords.txt")
p <- 5.75
x <- abs(x)
x <- x ^ p
write(sum(x) ^ (1/p), file = "Ex8/result.txt")
# Запись в файл
write(res, file = "Ex8/result.txt")
# Константа
p <- 5.75
# Вычисление по формуле
x <- abs(x)
x <- x ^ p
res <- sum(x) ^ (1/p)
# Запись в файл
write(res, file = "Ex8/result.txt")
# Чтение из файла
x <- read.table(file = "Ex8/coords.txt")
# Константа
p <- 5.75
# Вычисление по формуле
x <- abs(x)
x <- x ^ p
res <- sum(x) ^ (1/p)
# Запись в файл
write(res, file = "Ex8/result.txt")
# Чтение из файла
x <- read.table(file = "Ex8/coords.txt")
x
# Константа
p <- 5.75
# Вычисление по формуле
x <- abs(x)
x <- x ^ p
res <- sum(x) ^ (1/p)
res
# Запись в файл
write(res, file = "Ex8/result.txt")
# Чтение из файла
x <- read.table(file = "files/coords.txt")
x
# Константа
p <- 5.75
# Вычисление по формуле
x <- abs(x)
x <- x ^ p
res <- sum(x) ^ (1/p)
res
# Запись в файл
write(res, file = "files/result.txt")
d1 <- g - g
d1 <- g - g[2:length(g)]
d1
# Чтение из файла
x <- read.table(file = "files/coords.txt")
d1 <- g - g[2:length(g)]
d1
View(x)
# Чтение из файла
x <- read.table(file = "files/coords.txt")
d1 <- g - c(g[2:length(g)], 0)
d1
# Чтение из файла
x <- read.table(file = "files/coords.txt")
d1 <- x - c(x[2:length(g)], 0)
d1
d1 <- x - x[2:length(g)]
# Чтение из файла
x <- read.table(file = "files/coords.txt")
x <- t(x)
d1 <- x - x[2:length(g)]
d1
View(x)
View(x)
View(d1)
# Чтение из файла
x <- read.table(file = "files/coords.txt")
x <- t(x)
d1 <- x - x[2:length(x)]
d1
d2 <- d1 - d1[2:length(g)]
d2
View(x)
# Чтение из файла
x <- read.table(file = "files/coords.txt")
x <- t(x)
d1 <- x[1:length(x)-1] - x[2:length(x)]
d1
d2 <- d1[1:length(d1)-1] - d1[2:length(d1)]
d2
c(d1,d2)
c(d1,c(d2))
c(d1,t(d2))
#
write(c(d1,d2), file = "files/result.txt")
#
write(c(d1, '\n', d2), file = "files/diff_vectors.txt")
source("~/RStudio/MireaPractice/Pr1/Pr1.R", echo=TRUE)
